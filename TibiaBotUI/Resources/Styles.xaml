<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">
    <Style x:Key="QuickMenuButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>
    <Style x:Key="HeaderText" TargetType="TextBlock">
        <Setter Property="Margin" Value="55,0,0,0"/>
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Light"></Setter>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style TargetType="ToggleButton" x:Key="BurgerMainButton" >
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="FontSize" Value="30"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource  FlatButtonPressedBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundDisabledBrush }"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="MainMenuButtons">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="Margin" Value="0,1,0,1"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource FlyoutForegroundBrush}"></Setter>
                <Setter Property="Background" Value="{DynamicResource AccentBaseColorBrush}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Margin" Value="5,0,5,0"></Setter>
    </Style>
    <Style TargetType="RadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
        <Setter Property="FontFamily" Value="Wingdings"/>
    </Style>
    <Style TargetType="DataGridCellsPresenter">
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    </Style>
    <Style x:Key="BordelessNumericUpDown" TargetType="controls:NumericUpDown">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="HideUpDownButtons" Value="True"/>
    </Style>
    <Style x:Key="ThresholdNumericUpDown" TargetType="controls:NumericUpDown">
        <Setter Property="Margin" Value="10,5"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="255"/>
        <Setter Property="ToolTip" Value="Amount of sqm's before the pathfinding considers walking on this field. 0 = Aways walk on fields. X = path betwhen a and b > x, if walking on top of the field is faster, do it."/>
    </Style>
    <Style x:Key="RoundButtons" TargetType="Button" BasedOn="{StaticResource MetroCircleButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="FontFamily" Value="Wingdings"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="SpamRateNumericUpDown" TargetType="controls:NumericUpDown">
        <Setter Property="Interval" Value="100"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="StringFormat" Value="# ms"/>
        <Setter Property="HideUpDownButtons" Value="True"/>
    </Style>
    <Style x:Key="HealthConditionRangeNumericUpDown" TargetType="controls:NumericUpDown">
        <Setter Property="HideUpDownButtons" Value="True"/>
        <Setter Property="Minimum" Value="0"/>
    </Style>
    <Style x:Key="PrioritySlider" TargetType="Slider" BasedOn="{StaticResource {x:Type Slider}}">
        <Setter Property="Margin" Value="5,5,5,0"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Grid.ColumnSpan" Value="2"/>
        <Setter Property="Grid.Row" Value="4"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="TickPlacement" Value="BottomRight"/>
    </Style>
    <Style x:Key="EnabledCheckBox" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Margin" Value="15,0"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    <Style x:Key="EditToggleButton" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="HeaderTextBlock" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="{DynamicResource FlatButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource  FlatButtonForegroundBrush}"/>
        <Setter Property="Padding" Value="20,10,0,0"/>
        <Setter Property="Margin" Value="-10,10,0,10"/>
    </Style>
    <Style x:Key="FlyoutCombobox" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Margin" Value="30,5,5,5"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    <Style x:Key="FlyoutNumericUpDown" TargetType="controls:NumericUpDown">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="30,5,5,5"/>
    </Style>
</ResourceDictionary>