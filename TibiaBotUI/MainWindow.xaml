<controls:MetroWindow x:Class="TibiaBotUI.MainWindow"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:viewModels="clr-namespace:TibiaBotUI.ViewModels"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:TibiaBotUI.Converters"
        xmlns:local="clr-namespace:TibiaBotUI"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:attachedBehaviors="clr-namespace:TibiaBotUI.AttachedBehaviors"
        xmlns:models="clr-namespace:TibiaBotUI.Models"
        mc:Ignorable="d"
        Background="{DynamicResource ControlBackgroundBrush}"
        Title="{Binding WindowTitle}" Height="600" Width="748">
    <Window.DataContext>
        <viewModels:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <viewModels:CavebotViewModel x:Key="CavebotViewModel"/>
        <viewModels:AppConfigurationViewModel x:Key="AppConfigurationViewModel"/>
      
    </Window.Resources>
    <!--Flyouts-->
    <controls:MetroWindow.Flyouts >
        <controls:FlyoutsControl >
            <controls:Flyout Theme="Adapt" Header="Main Menu" IsOpen="{Binding IsChecked, ElementName=MainManuToggle}">
                <StackPanel>
                    <Button Content="Healer" Command="{Binding SwitchPage}" CommandParameter="0" Style="{DynamicResource MainMenuButtons}"/>
                    <Button Content="Cavebot" Command="{Binding SwitchPage}" CommandParameter="1"  Style="{DynamicResource MainMenuButtons}"/>
                    <Button Content="Targeting" Command="{Binding SwitchPage}" CommandParameter="2"  Style="{DynamicResource MainMenuButtons}"/>
                    <Button Content="Looting" Command="{Binding SwitchPage}" CommandParameter="3"  Style="{DynamicResource MainMenuButtons}"/>
                    <Button Content="Peristent" Command="{Binding SwitchPage}" CommandParameter="4"  Style="{DynamicResource MainMenuButtons}"/>
                    <Button Content="Hotkey" Command="{Binding SwitchPage}" CommandParameter="5"  Style="{DynamicResource MainMenuButtons}"/>
                    <Button Content="Application Settings" Command="{Binding SwitchPage}" CommandParameter="6" Style="{StaticResource MainMenuButtons}"/>
                </StackPanel>
            </controls:Flyout>
            <controls:Flyout DataContext="{StaticResource CavebotViewModel}" Position="Right" Theme="Adapt" IsOpen="{Binding EditingAction}" Header="Edit Action" MinWidth="420">
                <Grid>
                    <avalonEdit:TextEditor ShowLineNumbers="True" Foreground="{DynamicResource FlyoutForegroundBrush}" Margin="10" SyntaxHighlighting="{Binding HighlightingDefinition}" Name="ActionEditor" FontFamily="Consolas" FontSize="10pt" WordWrap="False" >
                        <i:Interaction.Behaviors>
                            <attachedBehaviors:AvalonEditBehaviour GiveMeTheText="{Binding ElementName=WaypointDataGrid, Path=SelectedItem.Action, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </i:Interaction.Behaviors>
                    </avalonEdit:TextEditor>
                </Grid>
            </controls:Flyout>
            <controls:Flyout DataContext="{StaticResource CavebotViewModel}" Position="Right" Theme="Adapt" IsOpen="{Binding ElementName=EditWaypointsToggleButton, Path=IsChecked}" Header="Edit Cavebot" MinWidth="200">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="70"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                  
                    <TextBlock Margin="5,2,5,2" Text="Type" Grid.Column="0" Grid.Row="2"/>
                    <ComboBox ItemsSource="{ Binding Source={StaticResource WaypointTypes}}" SelectedItem="{Binding WaypointType}" Margin="5,2,5,2"  Grid.Column="1" Grid.Row="2" />
                    <TextBlock Margin="5,2,5,2"  Text="Range" Grid.Row="3" Grid.Column="0"/>
                    <StackPanel  Grid.Row="3" Grid.Column="1" Orientation="Horizontal" Margin="5">
                        <controls:NumericUpDown Value="{Binding XWaypointRange}" Minimum="1" Maximum="5"/>
                        <controls:NumericUpDown  Value="{Binding YWaypointRange}" Minimum="1" Maximum="5"/>
                    </StackPanel>
                    <StackPanel Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Orientation="Horizontal">
                        <Button Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="Add" HorizontalAlignment="Right" Width="60" FontFamily="Webdings" FontSize="15" Margin="5"  Content="a" Command="{Binding AddWaypoint}" CommandParameter="{Binding ElementName=WaypointDataGrid, Path=SelectedItem}"/>
                        <Button Style="{DynamicResource MetroCircleButtonStyle}" ToolTip="Delete" HorizontalAlignment="Left" Width="60" FontFamily="Webdings" FontSize="15" Margin="5" Content="r" Command="{Binding DeleteWaypoint}" CommandParameter="{Binding ElementName=WaypointDataGrid, Path=SelectedItem}"/>
                    </StackPanel>
                    <TextBlock Text="Additional Configurations" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2"/>
                    <CheckBox IsChecked="{Binding WalkOnFire}" Margin="5" Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Content="Walk on Fire"/>
                    <CheckBox IsChecked="{Binding WalkOnPoison}" Margin="5" Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Content="Walk on Poison"/>
                    <CheckBox IsChecked="{Binding WalkOnEnergy}" Margin="5" Grid.Row="8" Grid.Column="0" Grid.ColumnSpan="2" Content="Walk on Energy"/>
                    <WrapPanel Margin="0,30,0,30" Width="120"  UseLayoutRounding="True" HorizontalAlignment="Center" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" >
                        <RadioButton IsChecked="{Binding  WaypointDirection, Converter={StaticResource RadioButtonToEnumConverter}, ConverterParameter={x:Static models:WaypointDirection.NorthWest }}"  Margin="0,0,5,2" Content="ë" GroupName="WaypointDirectionGroup" FlowDirection="RightToLeft" />
                        <RadioButton IsChecked="{Binding  WaypointDirection, Converter={StaticResource RadioButtonToEnumConverter}, ConverterParameter={x:Static models:WaypointDirection.North }}"   Margin="0,0,0,2" GroupName="WaypointDirectionGroup"/>
                        <RadioButton IsChecked="{Binding  WaypointDirection, Converter={StaticResource RadioButtonToEnumConverter}, ConverterParameter={x:Static models:WaypointDirection.NorthEast }}"  Margin="0,0,0,2" GroupName="WaypointDirectionGroup" Content="ì" />
                        <RadioButton IsChecked="{Binding  WaypointDirection, Converter={StaticResource RadioButtonToEnumConverter}, ConverterParameter={x:Static models:WaypointDirection.West }}"   Margin="-3,0,5,0"   GroupName="WaypointDirectionGroup" Content="ç" FlowDirection="RightToLeft"/>
                        <RadioButton IsChecked="{Binding  WaypointDirection, Converter={StaticResource RadioButtonToEnumConverter}, ConverterParameter={x:Static models:WaypointDirection.Center }}"   Margin="0,0,0,2"  GroupName="WaypointDirectionGroup"  />
                        <RadioButton IsChecked="{Binding  WaypointDirection, Converter={StaticResource RadioButtonToEnumConverter}, ConverterParameter={x:Static models:WaypointDirection.East }}"  Margin="0,0,0,2" GroupName="WaypointDirectionGroup" Content="è"/>
                        <RadioButton IsChecked="{Binding  WaypointDirection, Converter={StaticResource RadioButtonToEnumConverter}, ConverterParameter={x:Static models:WaypointDirection.SouthWest }}"    Margin="0,0,5,2"  GroupName="WaypointDirectionGroup" Content="í" FlowDirection="RightToLeft"/>
                        <RadioButton IsChecked="{Binding  WaypointDirection, Converter={StaticResource RadioButtonToEnumConverter}, ConverterParameter={x:Static models:WaypointDirection.South }}"   Margin="0,0,0,2" GroupName="WaypointDirectionGroup"/>
                        <RadioButton IsChecked="{Binding  WaypointDirection, Converter={StaticResource RadioButtonToEnumConverter}, ConverterParameter={x:Static models:WaypointDirection.SouthEast }}"   Margin="0,0,0,2" GroupName="WaypointDirectionGroup" Content="î"/>
                    </WrapPanel>
                </Grid>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        

        <ToggleButton Style="{StaticResource BurgerMainButton}" IsChecked="{Binding ActiveMainMenu}" Grid.Column="0" Name="MainManuToggle" Content="≡" Width="30" HorizontalAlignment="Left" VerticalAlignment="Top"/>

        <!--Main TabControl-->
        <TabControl Grid.Column="0" Name="MainTabControl" SelectedIndex="{Binding CurrentPage}">
            <TabItem Name="HealerTab" TabIndex="0">
                <Grid>
                    <TextBlock Text="Healer" Style="{StaticResource HeaderText}"/>
                </Grid>
            </TabItem>
            <!--Cavebot Tab-->
            <TabItem DataContext="{StaticResource CavebotViewModel}" Name="CavebotTab" TabIndex="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="1"  Grid.Row="0" Text="Cavebot" Style="{StaticResource HeaderText}"/>
                    <CheckBox FontSize="15" Margin="10,0,20,0" HorizontalAlignment="Left" Grid.Column="1" Grid.Row="1" Content="{Binding CavebotEnabled, Converter={StaticResource CheckboxContentConverter}}" IsChecked="{Binding CavebotEnabled}" />
                    <ToggleButton Name="EditWaypointsToggleButton" FontSize="15" HorizontalAlignment="Right" Margin="5,5,5,5" Content="Edit Waypoints" Grid.Column="2" Grid.Row="1"/>
                    <DataGrid SelectedItem="{Binding CurrentWaypoint}" HorizontalScrollBarVisibility="Hidden" AutoGenerateColumns="False" Name="WaypointDataGrid" Margin="5" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" ItemsSource="{Binding WaypointList,Mode=TwoWay}" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Id}" Header="Id" IsReadOnly="True"/>
                            <DataGridComboBoxColumn Header="Type" ItemsSource="{Binding Source={StaticResource WaypointTypes}}" SelectedItemBinding="{Binding Type, UpdateSourceTrigger=PropertyChanged}"  EditingElementStyle="{StaticResource {x:Type ComboBox}}"/>
                            <DataGridTextColumn Binding="{Binding Label}" Header="Label"/>
                            <DataGridTextColumn Binding="{Binding Location, Converter={StaticResource LocationContentConverter}}" Header="Location"/>
                            <DataGridTextColumn Header="Range">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{}{0} x {1}" Converter="{StaticResource WaypointRangeConverter}">
                                        <Binding  Path="XWaypointRange" />
                                        <Binding  Path="YWaypointRange" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Action" Binding="{Binding Action, Converter={StaticResource RemoveNewLineConverter}}" IsReadOnly="True" Width="*"/>
                        </DataGrid.Columns>

                        <DataGrid.InputBindings>
                            <MouseBinding Gesture="LeftDoubleClick" Command="{Binding EditWaypointAction}" CommandParameter="{Binding ElementName=WaypointDataGrid, Path=SelectedItem}" />
                        </DataGrid.InputBindings>
                    </DataGrid>
                   
                </Grid>
            </TabItem>
            <TabItem Name="TargetingTab" TabIndex="2">
                <Grid>
                    <TextBlock Text="Targeting" Style="{StaticResource HeaderText}"/>
                </Grid>
            </TabItem>
            <TabItem Name="LootingTab" TabIndex="3">
                <Grid>
                    <TextBlock Text="Looting" Style="{StaticResource HeaderText}"/>
                </Grid>
            </TabItem>
            <TabItem Name="PesistentTab" TabIndex="4">
                <Grid>
                    <TextBlock Text="Persistent" Style="{StaticResource HeaderText}"/>
                </Grid>
            </TabItem>
            <TabItem Name="HotkeyTab" TabIndex="5">
                <Grid>
                    <TextBlock Text="Hotkey" Style="{StaticResource HeaderText}"/>
                </Grid>
            </TabItem>
            <TabItem Name="ApplicationSettingsTab" TabIndex="5" DataContext="{StaticResource AppConfigurationViewModel}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0" Grid.ColumnSpan="3" Text="Application Settings" Style="{StaticResource HeaderText}"/>
                    <TextBlock Grid.Column="0" Width="70" HorizontalAlignment="Left" Grid.Row="1" Text="Color Accent"/>
                    <ComboBox ItemsSource="{Binding Source={StaticResource ThemeAccents}}" SelectedItem="{Binding ThemeAccent}" Grid.Column="1" Grid.Row="1"/>
                    <TextBlock Grid.Column="0" Width="70" HorizontalAlignment="Left" Grid.Row="2" Text="Theme Base"/>
                    <controls:ToggleSwitch IsChecked="{Binding BaseTheme, Converter={StaticResource BaseThemeConverter}}" FlowDirection="RightToLeft" OnLabel="Dark" OffLabel="Light" Grid.Column="1" Grid.Row="2"/>
                </Grid>
            </TabItem>
        </TabControl>



    </Grid>
    
</controls:MetroWindow>

